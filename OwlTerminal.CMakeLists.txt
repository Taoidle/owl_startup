cmake_minimum_required(VERSION 3.22)
set(ProjectMainName OwlAccessTerminal)
project(${ProjectMainName})

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_FLAGS "-O3 -Wall -Wextra")
# set(CMAKE_CXX_FLAGS "-O3 -g -Wall -Wextra")

include_directories(
    "/usr/include/opencv4"
    "/usr/local/include/google"
    "/usr/local/include/boost"
    "CommandService/CMakeLists.txt"
)

link_directories(
    "/usr/lib/arm-linux-gnueabihf"
    "/usr/local/lib"
)

link_libraries(
    opencv_alphamat
    opencv_aruco
    opencv_barcode
    opencv_bgsegm
    opencv_bioinspired
    opencv_calib3d
    opencv_ccalib
    opencv_core
    opencv_datasets
    opencv_dnn
    opencv_dnn_objdetect
    opencv_dnn_superres
    opencv_dpm
    opencv_face
    opencv_features2d
    opencv_flann
    opencv_freetype
    opencv_fuzzy
    opencv_hdf
    opencv_hfs
    opencv_highgui
    opencv_img_hash
    opencv_imgcodecs
    opencv_imgproc
    opencv_intensity_transform
    opencv_line_descriptor
    opencv_mcc
    opencv_ml
    opencv_objdetect
    opencv_optflow
    opencv_phase_unwrapping
    opencv_photo
    opencv_plot
    opencv_quality
    opencv_rapid
    opencv_reg
    opencv_rgbd
    opencv_saliency
    opencv_shape
    opencv_stereo
    opencv_stitching
    opencv_structured_light
    opencv_superres
    opencv_surface_matching
    opencv_text
    opencv_tracking
    opencv_video
    opencv_videoio
    opencv_videostab
    opencv_viz
    opencv_wechat_qrcode
    opencv_ximgproc
    opencv_xobjdetect
    opencv_xphoto
)

add_subdirectory(src/ExternLib/quickjspp/quickjs)
add_library(quickjspp INTERFACE)
target_link_libraries(quickjspp INTERFACE quickjs ${CMAKE_REQUIRED_LIBRARIES})
target_compile_features(quickjspp INTERFACE cxx_std_17)
target_include_directories(quickjspp INTERFACE src/ExternLib/quickjspp)
set_target_properties(quickjspp PROPERTIES PUBLIC_HEADER quickjspp.hpp)
# https://stackoverflow.com/questions/15053776/how-do-you-disable-the-unused-variable-warnings-coming-out-of-gcc-in-3rd-party-c
target_compile_options(quickjspp INTERFACE -Wno-unused-variable)

message(STATUS "PROTOBUFF_INCLUDE_DIRS: ${PROTOBUFF_INCLUDE_DIRS}")
message(STATUS "PROTOBUFF_LIBS: ${PROTOBUFF_LIBS}")

option(USE_DYNAMIC_BOOST "Config USE_DYNAMIC_BOOST")

# add_definitions(-Wall -Wextra -O1 -g)

set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)

set(BOOST_THEAD_MODULE "thread")
add_definitions(-DUSE_BOOST_THEAD)

if (USE_DYNAMIC_BOOST)
    message(STATUS "USE DYNAMIC BOOST !!!")
    add_definitions(-DBOOST_ALL_DYN_LINK=1)
else ()
    message(STATUS "USE STATIC BOOST !!!")
    set(Boost_USE_STATIC_LIBS ON)
    set(Boost_USE_STATIC_RUNTIME OFF)
endif ()

if (DEBUG_TAG_INFO)
    add_definitions(-DDEBUG_TAG_INFO)
endif (DEBUG_TAG_INFO)

set(Boost_USE_MULTITHREADED ON)
find_package(Boost 1.81.0 REQUIRED COMPONENTS system filesystem program_options json log url ${BOOST_THEAD_MODULE} REQUIRED)

if (EnableWebStaticModule)
    add_definitions(-DEnableWebStaticModule=1)
    list(APPEND WebStaticModuleFiles
            src/WebControlService/EmbedWebServer/EmbedWebServer.h
            src/WebControlService/EmbedWebServer/EmbedWebServer.cpp
            src/WebControlService/EmbedWebServer/EmbedWebServerSession.h
            src/WebControlService/EmbedWebServer/EmbedWebServerSession.cpp
            src/WebControlService/EmbedWebServer/EmbedWebServerTools.h
            src/WebControlService/EmbedWebServer/EmbedWebServerTools.cpp
            src/WebControlService/CmdExecute.cpp
            src/WebControlService/CmdExecute.h
            src/WebControlService/WebCmdMail.h
            )
endif (EnableWebStaticModule)

message(STATUS "Boost_INCLUDE_DIRS: ${Boost_INCLUDE_DIRS}")
message(STATUS "Boost_LIBRARY_DIRS: ${Boost_LIBRARY_DIRS}")
message(STATUS "Boost_LIBRARIES: ${Boost_LIBRARIES}")
message(STATUS "Boost_VERSION: ${Boost_VERSION}")

add_executable(${ProjectMainName}
        src/main.cpp
        src/CommandService/CommandService.cpp
        src/CommandService/CommandService.h
        src/ImageService/ImageProtobufDefine/ImageProtocol/ImageProtocol.pb.h
        src/ImageService/ImageProtobufDefine/ImageProtocol/ImageProtocol.pb.cc
        src/ImageService/protobuf_test.h
        src/ImageService/protobuf_test.cpp
        src/ImageService/ImageService.h
        src/ImageService/ImageService.cpp
        src/CommandService/SerialController.cpp
        src/CommandService/SerialController.h
        src/ConfigLoader/ConfigLoader.cpp
        src/ConfigLoader/ConfigLoader.h
        src/AsyncCallbackMailbox/AsyncCallbackMailbox.h
        src/CommandService/CmdSerialMail.h
        src/CommandService/CmdSerialMail.cpp
        src/ImageService/ImageServiceHttp.cpp
        src/ImageService/ImageServiceHttp.h
        src/ImageService/CameraReader.cpp
        src/ImageService/CameraReader.h
        src/ImageService/ImageServiceMail.h
        src/QueryPairsAnalyser/QueryPairsAnalyser.cpp
        src/QueryPairsAnalyser/QueryPairsAnalyser.h
        src/CommandService/CmdServiceHttp.cpp
        src/CommandService/CmdServiceHttp.h
        src/CommandService/ProcessJsonMessage.h
        src/Log/Log.cpp
        src/Log/Log.h
        src/Log/BoostAssertionFailed.cpp
        src/TimeService/TimeServiceMail.h
        src/TimeService/TimeService.cpp
        src/TimeService/TimeService.h
        src/CommandService/StateReader/StateReader.cpp
        src/CommandService/StateReader/StateReader.h
        src/CommandService/StateReader/StateReaderImplNormal.h
        src/CommandService/StateReader/StateReaderImplCo.h
        src/CommandService/StateReader/StateReaderImplCo.cpp
        src/CommandService/StateReader/LoadDataLittleEndian.h
        src/CommandService/AirplaneState.cpp
        src/CommandService/AirplaneState.h
        src/QuickJsWrapper/QuickJsWrapper.cpp
        src/QuickJsWrapper/QuickJsWrapper.h
        src/QuickJsWrapper/MathModule.cpp
        src/QuickJsWrapper/MathModule.h
        src/QuickJsWrapper/QuickJsWrapperImpl.cpp
        src/QuickJsWrapper/QuickJsWrapperImpl.h
        src/QuickJsWrapper/QuickJsH.h
        src/MapCalc/MapCalc.cpp
        src/MapCalc/MapCalc.h
        src/MapCalc/MapCalcMail.h
        src/MapCalc/MapCalcPlaneInfoType.h
        src/MapCalc/MapCalcPlaneInfoType.cpp)

target_link_libraries(${ProjectMainName} ${CMAKE_THREAD_LIBS_INIT} quickjspp)

include_directories(${Boost_INCLUDE_DIRS} ${PROTOBUFF_INCLUDE_DIRS})
target_link_libraries(${ProjectMainName} ${Boost_LIBRARIES} ${PROTOBUFF_LIBS})
link_directories(${Boost_LIBRARY_DIRS})
